#version 450

// tessellation evaluation shader

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

layout( triangles, equal_spacing, ccw ) in;

layout ( location = 0 ) in vec3 tes_position[];
layout ( location = 1 ) in vec2 tes_uv[];

layout ( location = 0 ) out vec2 frag_uv;

vec2 interpolate2D(vec2 v0, vec2 v1, vec2 v2)
{
    return vec2(gl_TessCoord.x) * v0 + vec2(gl_TessCoord.y) * v1 + vec2(gl_TessCoord.z) * v2;
}

vec3 interpolate3D(vec3 v0, vec3 v1, vec3 v2)
{
    return vec3(gl_TessCoord.x) * v0 + vec3(gl_TessCoord.y) * v1 + vec3(gl_TessCoord.z) * v2;
} 

void main() {
	frag_uv = interpolate2D( tes_uv[0], tes_uv[1], tes_uv[2] );
	vec3 frag_position = interpolate3D(tes_position[0], tes_position[1], tes_position[2]);
	gl_Position = vec4( frag_position, 1.0f );
}